{"version":3,"sources":["components/Header.js","components/Mint.jsx","App.js","index.js"],"names":["Header","className","to","Mint","e","Web3","require","Moralis","start","serverUrl","appId","useState","Id","setId","Amount","setAmount","Address","setAddress","state","setState","useEffect","home","a","isWeb3Enabled","isWeb3EnableLoading","enableWeb3","inits","initialize","currentUser","User","current","authenticate","console","log","mints","preventDefault","getData","web3","givenProvider","eth","net","getNetworkType","window","ethereum","enable","getAccounts","accounts","tokenId","parseInt","address","amt","conc","Contract","ABI","abi","minter","methods","mint","send","from","value","gasPrice","then","receipt","error","testmint","htmlFor","type","id","placeholder","onChange","target","required","onClick","App","elment","document","querySelector","fetchNFTMetadata","NFTs","meta","result","arrOwn","i","length","nft","nfts","JSON","parse","metadata","options","token_id","chain","Web3API","token","getTokenIdOwners","tokenIdOwners","forEach","owns","push","owner_of","htmls","image","description","name","col","createElement","innerHTML","appendChild","initializeApp","getAllTokenIds","ReactDOM","render","StrictMode","path","element","getElementById"],"mappings":"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","file":"static/js/main.38bf033b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link, Route, Routes} from  \"react-router-dom\"\r\n\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"Header\">\r\n        <Link to=\"/app\">Home</Link>\r\n        <Link to=\"/mint\">Mint</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport {Link, Route, Routes} from  \"react-router-dom\";\r\nimport Moralis from 'moralis';\r\nimport {react, useState, useEffect} from 'react';\r\nimport Web3 from 'web3';\r\nimport ABI from \"./NFTcontract.json\"\r\n\r\n\r\nconst Mint = (e) => {\r\n const Web3 = require('web3');\r\n \r\n  const serverUrl = \"https://16rbtyxd5tpb.usemoralis.com:2053/server\";\r\n  const appId = \"NifSH3dY4featASW9XmM2yS0TWovMjSvgUU2ANh9\";\r\n  \r\n  Moralis.start({serverUrl,appId});\r\n\r\n  const[Id, setId] = useState('');\r\n  const[Amount, setAmount] = useState('');\r\n  const[Address, setAddress] = useState('');\r\n  const[state,setState] = useState('');\r\n\r\n\r\n  const CONTRACT_ADDRESS = \"0xCbE9eA95fd81CFABa2EB3E94346f5CD218a7B863\";\r\n\r\n  useEffect(()=>{\r\n    let web3;\r\n   const home = async() => {\r\n      if (!Moralis.isWeb3Enabled && !Moralis.isWeb3EnableLoading) {\r\n        await Moralis.enableWeb3()\r\n      }\r\n      \r\n      const inits = async() => {\r\n         const initialize = async() => {\r\n            let currentUser =  Moralis.User.current(); \r\n            if(!currentUser){\r\n                currentUser = await  Moralis.authenticate();\r\n                console.log(currentUser);\r\n            }\r\n           web3 = await Moralis.enableWeb3();\r\n           console.log(currentUser)\r\n           \r\n        //    console.log(web3);\r\n\r\n          \r\n        //    let accounts = await web.eth.getAccounts();\r\n          //  const webs = await Moralis.enableWeb3({ provider: \"metamask\" })\r\n          //  const web = new Web3(webs);\r\n          //  const acc = await web.eth.getAccounts();\r\n          \r\n           \r\n          \r\n         }\r\n         initialize();\r\n      }\r\n      inits();\r\n   }\r\n   home()\r\n  },[Moralis.isWeb3Enabled, Moralis.isWeb3EnableLoading])\r\n\r\n \r\n\r\n// mint function\r\n const mints = async(e) => {\r\n   e.preventDefault();\r\n  const getData = async () => {\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    const network = await web3.eth.net.getNetworkType();\r\n    await window.ethereum.enable();\r\n    const accounts = await web3.eth.getAccounts();\r\n    setState(accounts[0]);\r\n  }\r\n  getData()\r\n\r\n   let tokenId = parseInt(Id);\r\n   let address = Address;\r\n   let amt =  parseInt(Amount);\r\n   console.log(Amount)\r\n\r\n\r\n  //  const NODE_URL = \"https://speedy-nodes-nyc.moralis.io/c0e58458c61205a011a5663a/eth/rinkeby\";\r\n  //  const provider = new Web3.providers.HttpProvider(NODE_URL);\r\n  //  const web = new Web3(provider)\r\n  const web3 = new Web3(Web3.givenProvider);\r\n  \r\n   \r\n  // console.log((contract.eth.sign(contract.utils.utf8ToHex(\"hello world\"), win)))\r\n   const acc =  await web3.eth.getAccounts()\r\n   const conc = new web3.eth.Contract(ABI.abi, CONTRACT_ADDRESS);\r\n   console.log(conc)\r\n   \r\n   \r\n   \r\n   try{\r\n    let minter = conc.methods.mint(address, tokenId, amt)\r\n    const minters  = await minter.send({\r\n      from:state,\r\n      value:0,\r\n      gasPrice: \"20000000000\"\r\n    })\r\n    .then(function(receipt){\r\n      console.log(receipt)\r\n    })\r\n   }catch(error){\r\n      console.error(error);\r\n   }\r\n }\r\n\r\n const testmint = async(e) => {\r\n   if(Address !== \"\" || Amount !== \"\" || Id !== \"\" ){\r\n      mints(e)\r\n   }\r\n }\r\n \r\n \r\n  return (\r\n    <div className=\"form-container\">\r\n        <nav>\r\n        <ul className=\"ul-head\">\r\n          <h1><Link to=\"/\">My Nfts</Link></h1>\r\n          <li><Link to=\"/Mint\">Mint</Link></li>\r\n        </ul>\r\n      </nav>\r\n        <form className=\"form-body\">\r\n           <div className=\"token-id\">\r\n               <label htmlFor=\"id\">\r\n                  <input type=\"number\" id=\"amount_input\" placeholder=\"tokenID\"  onChange={((e)=>(setId(e.target.value)))} required />\r\n               </label>\r\n           </div>\r\n           <div className=\"amount\">\r\n               <label htmlFor=\"\">\r\n                 <input type=\"number\" id=\"amount_input\" placeholder=\"Amount\" onChange={((e)=>(setAmount(e.target.value)))} required/>\r\n               </label>\r\n           </div>\r\n           <div className=\"address\">\r\n               <label htmlFor=\"\">\r\n                 <input type=\"text\" id=\"address_input\" placeholder=\"Address\" onChange={((e)=>(setAddress(e.target.value)))}   className=\"address\" />\r\n               </label>\r\n           </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\" id=\"submit_mint\" onClick={((e)=>(testmint(e)))}>Submit</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default  Mint;","import Style from'./App.css';\nimport Web3 from 'web3';\nimport {react, useState, useEffect} from 'react';\nimport Moralis from 'moralis';\nimport {Link, Route, Routes} from  \"react-router-dom\";\nimport Header from './components/Header';\nimport Mint from './components/Mint';\n// import { Browser } from \"rea\"\n\n \n\nfunction App() {\n const enable = async() => { \n  await window.ethereum.enable();\n }\n enable();\n  const serverUrl = \"https://16rbtyxd5tpb.usemoralis.com:2053/server\";\n  const appId = \"NifSH3dY4featASW9XmM2yS0TWovMjSvgUU2ANh9\";\n  \n  Moralis.start({serverUrl,appId});\n  \n \n  useEffect(()=>{\n    let elment = document.querySelector(\".container\");\n\n    const fetchNFTMetadata = async(NFTs) => {\n      const meta = NFTs.result;\n      \n      let arrOwn = [];\n      for (let i = 0; i < meta.length; i++){\n        const nft = meta[i]\n        const nfts = JSON.parse(nft.metadata)\n      \n        const options = { address: \"0xCbE9eA95fd81CFABa2EB3E94346f5CD218a7B863\", token_id: nft.token_id, chain: \"rinkeby\" };\n        const tokenIdOwners = await Moralis.Web3API.token.getTokenIdOwners(options);\n        const owner = tokenIdOwners.result;\n        owner.forEach((owns)=>{\n          arrOwn.push(owns.owner_of);\n        })\n\n        let htmls =`  \n        \n          <image src =${nfts.image} alt =\"card image\"> \n          <div>\n            <h1>${nfts.description}</h1>\n            <p>${nfts.name}</p>\n            <p>Number of Owners :${arrOwn.length}</p>\n            <P>Token Id: ${nft.token_id}</p>\n            <a href=\"./mint?nftId=${nft.token_id}\" className=\"mint\"></a>\n          </div>  \n       \n           `\n\n           let col = document.createElement(\"div\")\n           col.className = \"card\"\n           col.innerHTML = htmls\n           elment.appendChild(col);\n      }\n     }\n     \n     \n     \n     const initializeApp = async() => {\n       let currentUser = Moralis.User.current(); \n       if(!currentUser){\n         currentUser = await  Moralis.authenticate();\n         console.log(currentUser);\n       }\n     \n       const options = { address: \"0xCbE9eA95fd81CFABa2EB3E94346f5CD218a7B863\", chain: \"rinkeby\"  };\n       let NFTs = await Moralis.Web3API.token.getAllTokenIds(options);\n       fetchNFTMetadata(NFTs)\n     }\n     initializeApp();\n     \n  }, [])\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <ul className=\"ul-head\">\n          <h1><Link to=\"/\">My Nfts</Link></h1>\n          <li><Link to=\"/Mint\">Mint</Link></li>\n        </ul>\n      </nav>\n      <div className=\"container\">\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'; \nimport { BrowserRouter, Route , Routes } from \"react-router-dom\";\nimport Mint from \"./components/Mint\"\nimport Header from './components/Header'\n\nReactDOM.render(\n  <React.StrictMode>\n   <BrowserRouter>\n     <Routes>\n      <Route path=\"Header\" element={<Header/>}></Route>\n       <Route path=\"Mint\" element={<Mint/>}></Route>\n       <Route path=\"/\" element={<App />} />\n     </Routes>\n   </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}